plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.example.okhttp3-dependency-injection'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
}

// We request the "injected" dependency on runtime classpath only.
//   On Android, we would configure the attribute on the resolvable configuration that we wish to "inject".
//   ...as-in Android variant, e.g. "freeDebugRuntimeClasspath"
configurations.runtimeClasspath.attributes {
    attribute(Attribute.of("com.example.enhanced", Boolean), true)
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
